Manipulates all the transactions taking place at the counter

1. add_counter_to_token(pysql, token_id, product_id, quantity) : 

    - adds given quantity of product to a given token, while simultaneously updating counter
        quantity in the inventory and logging the transaction

    - in case of an error in the input data, nothing happens

    pysql : PySql object of current database

    token_id : id of token to which product are to be added

    product_id : product to be added

    quantity : quantity of product to be added (Numeric(9, 3))

2. add_inventory_to_counter(pysql, product_id, quantity) : 

    - adds given quantity of product from local warehouse to counter, while simultaneously updating
        the inventory and logging the transaction

    - nothing happens in case of error in input information

    pysql : PySql object of current database

    product_id : product to be added

    quantity : quantity of product to be added (Numeric(9, 3))

3.  add_token_to_counter(pysql, token_id, product_id, quantity) : 

    - adds given quantity of product from token to counter, while simultaneously updating the inventory
        and token_select_products table

    - returns invalid if given inputs are invalid

    pysql : PySql object of current database

    product_id : product to be added

    token_id : id of token from which product is to be subtracted

    quantity : quantity of product to be added to counter (Numeric(9, 3))